{% set origin = cors.origin|d('$http_origin') %}
        # https://gist.github.com/alexjs/4165271

        set $cors "true";

        {# TODO: Figure out how to allow this in pillar
           each x|replace('.', '\.') then append |?
           probably just better to have the user specify the regex
        if ($http_origin ~* (whitelist\.address\.one|whitelist\.address\.two)) {
            set $cors "true";
        }
        #}

        # Nginx doesn't support nested If statements. This is where things get slightly nasty.
        # Determine the HTTP request method used

        {% for item in cors.methods %}
        if ($request_method = '{{ item|upper }}') {
            set $cors "${cors}{{ item|lower }}";
        }
        {% endfor %}

        if ($cors = "true") {
            # Catch all incase there's a request method we're not dealing with properly
            add_header 'Access-Control-Allow-Origin' "{{ origin }}";
        }

        {% for item in cors.methods %}
        {% if item|lower == 'options' %}
        {% include 'python/nginx/files/cors.options.conf' with context -%}
        {% else %}
        {% include 'python/nginx/files/cors.method.conf' with context -%}
        {% endif %}
        {% endfor %}
